tags:
  - name: users
    description: Users API
  - name: reservations
    description: Reservations API

paths:
  # [GET] users
  /users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    post:
      tags:
        - users
      summary: Add User
      parameters:
        - name: body
          in: body
          description: User Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] users/id
  /users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
        - name: body
          in: body
          description: User Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [POST] reservation
  /reservations:
    post:
      tags:
        - reservations
      summary: Create a Reservation
      parameters:
        - name: body
          in: body
          description: Reservation Data
          required: true
          schema:
            $ref: '#/definitions/reservations'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] reservations by host ID
  /reservations/host/{hostId}:
    get:
      tags:
        - reservations
      summary: Get Reservations by Host ID
      parameters:
        - name: hostId
          in: path
          description: Host ID
          required: true
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] reservations by user ID
  /reservations/user/{userId}:
    get:
      tags:
        - reservations
      summary: Get Reservations by User ID
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [DELETE] reservation by ID
  /reservations/{reservationId}:
    delete:
      tags:
        - reservations
      summary: Delete Reservation by ID
      parameters:
        - name: reservationId
          in: path
          description: Reservation ID
          required: true
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

definitions:
  users:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: User Email
      password:
        type: string
        description: User Password

  reservations:
    type: object
    required:
      - host_id
      - user_id
      - start_date
      - end_date
    properties:
      host_id:
        type: string
        description: Host ID
      user_id:
        type: string
        description: User ID
      start_date:
        type: string
        format: date
        description: Reservation Start Date
      end_date:
        type: string
        format: date
        description: Reservation End Date

schemes:
  - https
  - http
