{"version":3,"sources":["../../src/controllers/category.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\r\nimport { Container } from 'typedi';\r\nimport { Category } from '@interfaces/category.interface';\r\nimport { CategoryService } from '@services/category.service';\r\nimport { CreateCategoryDto } from '@dtos/category.dto';\r\n\r\nexport class CategoryController {\r\n  public categoryService = Container.get(CategoryService);\r\n\r\n  public getCategories = async (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      const categories: Category[] = await this.categoryService.findAllCategories();\r\n      res.status(200).json({ data: categories, message: 'All categories retrieved successfully' });\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public getCategoryById = async (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      const categoryId: string = req.params.id;\r\n      const category: Category = await this.categoryService.findCategoryById(categoryId);\r\n      res.status(200).json({ data: category, message: 'Category retrieved successfully' });\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public createCategory = async (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      const categoryData: CreateCategoryDto = req.body;\r\n      const newCategory: Category = await this.categoryService.createCategory(categoryData);\r\n      res.status(201).json({ data: newCategory, message: 'Category created successfully' });\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public updateCategory = async (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      const categoryId: string = req.params.id;\r\n      const categoryData: CreateCategoryDto = req.body;\r\n      const updatedCategory: Category = await this.categoryService.updateCategory(categoryId, categoryData);\r\n      res.status(200).json({ data: updatedCategory, message: 'Category updated successfully' });\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public deleteCategory = async (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      const categoryId: string = req.params.id;\r\n      const deletedCategory: Category = await this.categoryService.deleteCategory(categoryId);\r\n      res.status(200).json({ data: deletedCategory, message: 'Category deleted successfully' });\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n}\r\n"],"names":["CategoryController","categoryService","Container","get","CategoryService","getCategories","req","res","next","categories","findAllCategories","status","json","data","message","error","getCategoryById","categoryId","params","id","category","findCategoryById","createCategory","categoryData","body","newCategory","updateCategory","updatedCategory","deleteCategory","deletedCategory"],"mappings":";;;;+BAMaA;;;eAAAA;;;wBALa;iCAEM;;;;;;;;;;;;;;AAGzB,IAAA,AAAMA,qBAAN,MAAMA;;QACX,uBAAOC,mBAAkBC,iBAAS,CAACC,GAAG,CAACC,gCAAe;QAEtD,uBAAOC,iBAAgB,OAAOC,KAAcC,KAAeC;YACzD,IAAI;gBACF,MAAMC,aAAyB,MAAM,IAAI,CAACR,eAAe,CAACS,iBAAiB;gBAC3EH,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMJ;oBAAYK,SAAS;gBAAwC;YAC5F,EAAE,OAAOC,OAAO;gBACdP,KAAKO;YACP;QACF;QAEA,uBAAOC,mBAAkB,OAAOV,KAAcC,KAAeC;YAC3D,IAAI;gBACF,MAAMS,aAAqBX,IAAIY,MAAM,CAACC,EAAE;gBACxC,MAAMC,WAAqB,MAAM,IAAI,CAACnB,eAAe,CAACoB,gBAAgB,CAACJ;gBACvEV,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMO;oBAAUN,SAAS;gBAAkC;YACpF,EAAE,OAAOC,OAAO;gBACdP,KAAKO;YACP;QACF;QAEA,uBAAOO,kBAAiB,OAAOhB,KAAcC,KAAeC;YAC1D,IAAI;gBACF,MAAMe,eAAkCjB,IAAIkB,IAAI;gBAChD,MAAMC,cAAwB,MAAM,IAAI,CAACxB,eAAe,CAACqB,cAAc,CAACC;gBACxEhB,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMY;oBAAaX,SAAS;gBAAgC;YACrF,EAAE,OAAOC,OAAO;gBACdP,KAAKO;YACP;QACF;QAEA,uBAAOW,kBAAiB,OAAOpB,KAAcC,KAAeC;YAC1D,IAAI;gBACF,MAAMS,aAAqBX,IAAIY,MAAM,CAACC,EAAE;gBACxC,MAAMI,eAAkCjB,IAAIkB,IAAI;gBAChD,MAAMG,kBAA4B,MAAM,IAAI,CAAC1B,eAAe,CAACyB,cAAc,CAACT,YAAYM;gBACxFhB,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMc;oBAAiBb,SAAS;gBAAgC;YACzF,EAAE,OAAOC,OAAO;gBACdP,KAAKO;YACP;QACF;QAEA,uBAAOa,kBAAiB,OAAOtB,KAAcC,KAAeC;YAC1D,IAAI;gBACF,MAAMS,aAAqBX,IAAIY,MAAM,CAACC,EAAE;gBACxC,MAAMU,kBAA4B,MAAM,IAAI,CAAC5B,eAAe,CAAC2B,cAAc,CAACX;gBAC5EV,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMgB;oBAAiBf,SAAS;gBAAgC;YACzF,EAAE,OAAOC,OAAO;gBACdP,KAAKO;YACP;QACF;;AACF"}