{"version":3,"sources":["../../src/test/auth.test.ts"],"sourcesContent":["import bcrypt from 'bcrypt';\r\nimport mongoose from 'mongoose';\r\nimport request from 'supertest';\r\nimport App from '@/app';\r\nimport { CreateUserDto } from '@dtos/users.dto';\r\nimport AuthRoute from '@routes/auth.route';\r\n\r\nafterAll(async () => {\r\n  await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\r\n});\r\n\r\ndescribe('Testing Auth', () => {\r\n  describe('[POST] /signup', () => {\r\n    it('response should have the Create userData', async () => {\r\n      const userData: CreateUserDto = {\r\n        email: 'test@email.com',\r\n        password: 'q1w2e3r4!',\r\n      };\r\n\r\n      const authRoute = new AuthRoute();\r\n      const users = authRoute.authController.authService.users;\r\n\r\n      users.findOne = jest.fn().mockReturnValue(null);\r\n      users.create = jest.fn().mockReturnValue({\r\n        _id: '60706478aad6c9ad19a31c84',\r\n        email: userData.email,\r\n        password: await bcrypt.hash(userData.password, 10),\r\n      });\r\n\r\n      (mongoose as any).connect = jest.fn();\r\n      const app = new App([authRoute]);\r\n      return request(app.getServer()).post(`${authRoute.path}signup`).send(userData);\r\n    });\r\n  });\r\n\r\n  describe('[POST] /login', () => {\r\n    it('response should have the Set-Cookie header with the Authorization token', async () => {\r\n      const userData: CreateUserDto = {\r\n        email: 'test@email.com',\r\n        password: 'q1w2e3r4!',\r\n      };\r\n\r\n      const authRoute = new AuthRoute();\r\n      const users = authRoute.authController.authService.users;\r\n\r\n      users.findOne = jest.fn().mockReturnValue({\r\n        _id: '60706478aad6c9ad19a31c84',\r\n        email: userData.email,\r\n        password: await bcrypt.hash(userData.password, 10),\r\n      });\r\n\r\n      (mongoose as any).connect = jest.fn();\r\n      const app = new App([authRoute]);\r\n      return request(app.getServer())\r\n        .post(`${authRoute.path}login`)\r\n        .send(userData)\r\n        .expect('Set-Cookie', /^Authorization=.+/);\r\n    });\r\n  });\r\n\r\n  // describe('[POST] /logout', () => {\r\n  //   it('logout Set-Cookie Authorization=; Max-age=0', async () => {\r\n  //     const userData: User = {\r\n  //       _id: '60706478aad6c9ad19a31c84',\r\n  //       email: 'test@email.com',\r\n  //       password: await bcrypt.hash('q1w2e3r4!', 10),\r\n  //     };\r\n\r\n  //     const authRoute = new AuthRoute();\r\n  //     const users = authRoute.authController.authService.users;\r\n\r\n  //     users.findOne = jest.fn().mockReturnValue(userData);\r\n\r\n  //     (mongoose as any).connect = jest.fn();\r\n  //     const app = new App([authRoute]);\r\n  //     return request(app.getServer())\r\n  //       .post(`${authRoute.path}logout`)\r\n  //       .send(userData)\r\n  //       .set('Set-Cookie', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ')\r\n  //       .expect('Set-Cookie', /^Authorization=\\; Max-age=0/);\r\n  //   });\r\n  // });\r\n});\r\n"],"names":["afterAll","Promise","resolve","setTimeout","describe","it","userData","email","password","authRoute","AuthRoute","users","authController","authService","findOne","jest","fn","mockReturnValue","create","_id","bcrypt","hash","mongoose","connect","app","App","request","getServer","post","path","send","expect"],"mappings":";;;;+DAAmB;iEACE;kEACD;4DACJ;kEAEM;;;;;;AAEtBA,SAAS;IACP,MAAM,IAAIC,QAAcC,CAAAA,UAAWC,WAAW,IAAMD,WAAW;AACjE;AAEAE,SAAS,gBAAgB;IACvBA,SAAS,kBAAkB;QACzBC,GAAG,4CAA4C;YAC7C,MAAMC,WAA0B;gBAC9BC,OAAO;gBACPC,UAAU;YACZ;YAEA,MAAMC,YAAY,IAAIC,kBAAS;YAC/B,MAAMC,QAAQF,UAAUG,cAAc,CAACC,WAAW,CAACF,KAAK;YAExDA,MAAMG,OAAO,GAAGC,KAAKC,EAAE,GAAGC,eAAe,CAAC;YAC1CN,MAAMO,MAAM,GAAGH,KAAKC,EAAE,GAAGC,eAAe,CAAC;gBACvCE,KAAK;gBACLZ,OAAOD,SAASC,KAAK;gBACrBC,UAAU,MAAMY,eAAM,CAACC,IAAI,CAACf,SAASE,QAAQ,EAAE;YACjD;YAECc,iBAAQ,CAASC,OAAO,GAAGR,KAAKC,EAAE;YACnC,MAAMQ,MAAM,IAAIC,YAAG,CAAC;gBAAChB;aAAU;YAC/B,OAAOiB,IAAAA,kBAAO,EAACF,IAAIG,SAAS,IAAIC,IAAI,CAAC,CAAC,EAAEnB,UAAUoB,IAAI,CAAC,MAAM,CAAC,EAAEC,IAAI,CAACxB;QACvE;IACF;IAEAF,SAAS,iBAAiB;QACxBC,GAAG,2EAA2E;YAC5E,MAAMC,WAA0B;gBAC9BC,OAAO;gBACPC,UAAU;YACZ;YAEA,MAAMC,YAAY,IAAIC,kBAAS;YAC/B,MAAMC,QAAQF,UAAUG,cAAc,CAACC,WAAW,CAACF,KAAK;YAExDA,MAAMG,OAAO,GAAGC,KAAKC,EAAE,GAAGC,eAAe,CAAC;gBACxCE,KAAK;gBACLZ,OAAOD,SAASC,KAAK;gBACrBC,UAAU,MAAMY,eAAM,CAACC,IAAI,CAACf,SAASE,QAAQ,EAAE;YACjD;YAECc,iBAAQ,CAASC,OAAO,GAAGR,KAAKC,EAAE;YACnC,MAAMQ,MAAM,IAAIC,YAAG,CAAC;gBAAChB;aAAU;YAC/B,OAAOiB,IAAAA,kBAAO,EAACF,IAAIG,SAAS,IACzBC,IAAI,CAAC,CAAC,EAAEnB,UAAUoB,IAAI,CAAC,KAAK,CAAC,EAC7BC,IAAI,CAACxB,UACLyB,MAAM,CAAC,cAAc;QAC1B;IACF;AAEA,qCAAqC;AACrC,oEAAoE;AACpE,+BAA+B;AAC/B,yCAAyC;AACzC,iCAAiC;AACjC,sDAAsD;AACtD,SAAS;AAET,yCAAyC;AACzC,gEAAgE;AAEhE,2DAA2D;AAE3D,6CAA6C;AAC7C,wCAAwC;AACxC,sCAAsC;AACtC,yCAAyC;AACzC,wBAAwB;AACxB,kEAAkE;AAClE,8DAA8D;AAC9D,QAAQ;AACR,MAAM;AACR"}