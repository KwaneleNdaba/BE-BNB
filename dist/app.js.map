{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import 'reflect-metadata';\r\nimport compression from 'compression';\r\nimport cookieParser from 'cookie-parser';\r\nimport cors from 'cors';\r\nimport express from 'express';\r\nimport helmet from 'helmet';\r\nimport hpp from 'hpp';\r\nimport morgan from 'morgan';\r\nimport swaggerJSDoc from 'swagger-jsdoc';\r\nimport swaggerUi from 'swagger-ui-express';\r\nimport { NODE_ENV, PORT, LOG_FORMAT, ORIGIN, CREDENTIALS } from '@config';\r\nimport { dbConnection } from '@database';\r\nimport { Routes } from '@interfaces/routes.interface';\r\nimport { ErrorMiddleware } from '@middlewares/error.middleware';\r\nimport { logger, stream } from '@utils/logger';\r\n\r\nexport class App {\r\n  public app: express.Application;\r\n  public env: string;\r\n  public port: string | number;\r\n\r\n  constructor(routes: Routes[]) {\r\n    this.app = express();\r\n    this.env = NODE_ENV || 'development';\r\n    this.port = PORT || 3000;\r\n\r\n    this.connectToDatabase();\r\n    this.initializeMiddlewares();\r\n    this.initializeRoutes(routes);\r\n    this.initializeSwagger();\r\n    this.initializeErrorHandling();\r\n  }\r\n\r\n  public listen() {\r\n    this.app.listen(this.port, () => {\r\n      logger.info(`=================================`);\r\n      logger.info(`======= ENV: ${this.env} =======`);\r\n      logger.info(`ðŸš€ App listening on the port ${this.port}`);\r\n      logger.info(`=================================`);\r\n    });\r\n  }\r\n\r\n  public getServer() {\r\n    return this.app;\r\n  }\r\n\r\n  private async connectToDatabase() {\r\n    await dbConnection();\r\n  }\r\n\r\n  private initializeMiddlewares() {\r\n    this.app.use(morgan(LOG_FORMAT, { stream }));\r\n    this.app.use(cors({ origin: 'http://localhost:3001', credentials: CREDENTIALS }));\r\n    this.app.use(hpp());\r\n    this.app.use(helmet());\r\n    this.app.use(compression());\r\n    this.app.use(express.json());\r\n    this.app.use(express.urlencoded({ extended: true }));\r\n    this.app.use(cookieParser());\r\n  }\r\n\r\n  private initializeRoutes(routes: Routes[]) {\r\n    routes.forEach(route => {\r\n      this.app.use('/', route.router);\r\n    });\r\n  }\r\n\r\n  private initializeSwagger() {\r\n    const options = {\r\n      swaggerDefinition: {\r\n        info: {\r\n          title: 'REST API',\r\n          version: '1.0.0',\r\n          description: 'Example docs',\r\n        },\r\n      },\r\n      apis: ['./src/routes/*.route.ts', 'swagger.yaml'], // Include all route files\r\n    };\r\n  \r\n    const specs = swaggerJSDoc(options);\r\n    this.app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\r\n  }\r\n  \r\n\r\n  private initializeErrorHandling() {\r\n    this.app.use(ErrorMiddleware);\r\n  }\r\n}\r\n"],"names":["App","listen","app","port","logger","info","env","getServer","connectToDatabase","dbConnection","initializeMiddlewares","use","morgan","LOG_FORMAT","stream","cors","origin","credentials","CREDENTIALS","hpp","helmet","compression","express","json","urlencoded","extended","cookieParser","initializeRoutes","routes","forEach","route","router","initializeSwagger","options","swaggerDefinition","title","version","description","apis","specs","swaggerJSDoc","swaggerUi","serve","setup","initializeErrorHandling","ErrorMiddleware","constructor","NODE_ENV","PORT"],"mappings":";;;;+BAgBaA;;;eAAAA;;;QAhBN;oEACiB;qEACC;6DACR;gEACG;+DACD;4DACH;+DACG;qEACM;yEACH;wBAC0C;0BACnC;iCAEG;wBACD;;;;;;;;;;;;;;;;;;;AAExB,IAAA,AAAMA,MAAN,MAAMA;IAiBJC,SAAS;QACd,IAAI,CAACC,GAAG,CAACD,MAAM,CAAC,IAAI,CAACE,IAAI,EAAE;YACzBC,cAAM,CAACC,IAAI,CAAC,CAAC,iCAAiC,CAAC;YAC/CD,cAAM,CAACC,IAAI,CAAC,CAAC,aAAa,EAAE,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC;YAC9CF,cAAM,CAACC,IAAI,CAAC,CAAC,6BAA6B,EAAE,IAAI,CAACF,IAAI,CAAC,CAAC;YACvDC,cAAM,CAACC,IAAI,CAAC,CAAC,iCAAiC,CAAC;QACjD;IACF;IAEOE,YAAY;QACjB,OAAO,IAAI,CAACL,GAAG;IACjB;IAEA,MAAcM,oBAAoB;QAChC,MAAMC,IAAAA,sBAAY;IACpB;IAEQC,wBAAwB;QAC9B,IAAI,CAACR,GAAG,CAACS,GAAG,CAACC,IAAAA,eAAM,EAACC,kBAAU,EAAE;YAAEC,QAAAA,cAAM;QAAC;QACzC,IAAI,CAACZ,GAAG,CAACS,GAAG,CAACI,IAAAA,aAAI,EAAC;YAAEC,QAAQ;YAAyBC,aAAaC,mBAAW;QAAC;QAC9E,IAAI,CAAChB,GAAG,CAACS,GAAG,CAACQ,IAAAA,YAAG;QAChB,IAAI,CAACjB,GAAG,CAACS,GAAG,CAACS,IAAAA,eAAM;QACnB,IAAI,CAAClB,GAAG,CAACS,GAAG,CAACU,IAAAA,oBAAW;QACxB,IAAI,CAACnB,GAAG,CAACS,GAAG,CAACW,gBAAO,CAACC,IAAI;QACzB,IAAI,CAACrB,GAAG,CAACS,GAAG,CAACW,gBAAO,CAACE,UAAU,CAAC;YAAEC,UAAU;QAAK;QACjD,IAAI,CAACvB,GAAG,CAACS,GAAG,CAACe,IAAAA,qBAAY;IAC3B;IAEQC,iBAAiBC,MAAgB,EAAE;QACzCA,OAAOC,OAAO,CAACC,CAAAA;YACb,IAAI,CAAC5B,GAAG,CAACS,GAAG,CAAC,KAAKmB,MAAMC,MAAM;QAChC;IACF;IAEQC,oBAAoB;QAC1B,MAAMC,UAAU;YACdC,mBAAmB;gBACjB7B,MAAM;oBACJ8B,OAAO;oBACPC,SAAS;oBACTC,aAAa;gBACf;YACF;YACAC,MAAM;gBAAC;gBAA2B;aAAe;QACnD;QAEA,MAAMC,QAAQC,IAAAA,qBAAY,EAACP;QAC3B,IAAI,CAAC/B,GAAG,CAACS,GAAG,CAAC,aAAa8B,yBAAS,CAACC,KAAK,EAAED,yBAAS,CAACE,KAAK,CAACJ;IAC7D;IAGQK,0BAA0B;QAChC,IAAI,CAAC1C,GAAG,CAACS,GAAG,CAACkC,gCAAe;IAC9B;IAjEAC,YAAYlB,MAAgB,CAAE;QAJ9B,uBAAO1B,OAAP,KAAA;QACA,uBAAOI,OAAP,KAAA;QACA,uBAAOH,QAAP,KAAA;QAGE,IAAI,CAACD,GAAG,GAAGoB,IAAAA,gBAAO;QAClB,IAAI,CAAChB,GAAG,GAAGyC,gBAAQ,IAAI;QACvB,IAAI,CAAC5C,IAAI,GAAG6C,YAAI,IAAI;QAEpB,IAAI,CAACxC,iBAAiB;QACtB,IAAI,CAACE,qBAAqB;QAC1B,IAAI,CAACiB,gBAAgB,CAACC;QACtB,IAAI,CAACI,iBAAiB;QACtB,IAAI,CAACY,uBAAuB;IAC9B;AAwDF"}